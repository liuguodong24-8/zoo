# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Animal API
    version: 0.0.1
paths:
    /animal:
        post:
            tags:
                - Animal
            operationId: Animal_CreateAnimal
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAnimalRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAnimalReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /animal/compose:
        post:
            tags:
                - Animal
            operationId: Animal_ComposeAnimal
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ComposeAnimalRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ComposeAnimalReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /animal/feeding:
        post:
            tags:
                - Animal
            operationId: Animal_FeedingAnimal
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FeedingAnimalRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FeedingAnimalReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /animal/kill:
        post:
            tags:
                - Animal
            operationId: Animal_KillAnimal
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/KillAnimalRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/KillAnimalReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /animal/{tokenId}:
        get:
            tags:
                - Animal
            operationId: Animal_GetAnimal
            parameters:
                - name: tokenId
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAnimalReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /animals:
        get:
            tags:
                - Animal
            operationId: Animal_ListAnimal
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAnimalReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AnimalInfo:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                address:
                    type: string
                stakeAmount:
                    type: integer
                    format: int64
                level:
                    type: integer
                    format: int64
                category:
                    type: integer
                    format: int64
                capacity:
                    type: integer
                    format: int64
                volume:
                    type: integer
                    format: int64
                rarity:
                    type: integer
                    format: int64
                sex:
                    type: integer
                    format: int64
                age:
                    type: integer
                    format: int64
                tokenId:
                    type: integer
                    format: int64
                imgUrl:
                    type: string
                status:
                    type: integer
                    format: int64
                startTime:
                    type: integer
                    format: int64
        ComposeAnimalReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                msg:
                    type: string
        ComposeAnimalRequest:
            type: object
            properties:
                tokenId1:
                    type: integer
                    format: int64
                tokenId2:
                    type: integer
                    format: int64
        CreateAnimalReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                msg:
                    type: string
        CreateAnimalRequest:
            type: object
            properties:
                address:
                    type: string
                stakeAmount:
                    type: integer
                    format: int64
                level:
                    type: integer
                    format: int64
                category:
                    type: integer
                    format: int64
                capacity:
                    type: integer
                    format: int64
                volume:
                    type: integer
                    format: int64
                rarity:
                    type: integer
                    format: int64
                sex:
                    type: integer
                    format: int64
                age:
                    type: integer
                    format: int64
                tokenId:
                    type: integer
                    format: int64
        FeedingAnimalReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                msg:
                    type: string
        FeedingAnimalRequest:
            type: object
            properties:
                fromTokenId:
                    type: integer
                    format: int64
                toTokenId:
                    type: integer
                    format: int64
        GetAnimalReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/AnimalInfo'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        KillAnimalReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                msg:
                    type: string
        KillAnimalRequest:
            type: object
            properties:
                tokenId:
                    type: integer
                    format: int64
        ListAnimalReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                msg:
                    type: string
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/AnimalInfo'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: Animal
